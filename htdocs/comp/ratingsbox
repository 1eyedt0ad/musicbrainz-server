<%args>
    $entity_id
    $entity_type

    $rating => undef    # If provided, don't load the aggregate ratings from DB 
    $short => 0
</%args>

<%perl>

    # Check argument
    MusicBrainz::Server::Validation::IsNonNegInteger($entity_id) && $entity_id
        or return $m->comp("/comp/layout/badarguments", text => "Argument entity_id is required");

    if (not defined($rating))
    {
        # Instantiate MusicBrainz object
        my $mb = $m->comp("/comp/dblogin");

        require MusicBrainz::Server::Rating;
        my $rt = MusicBrainz::Server::Rating->new($mb->{DBH});

        $rating = $rt->GetRatingForEntity($entity_type, $entity_id);
    }

    $m->out("<span>Rating: ". ($rating->{"rating"} || "none"));
    $m->out(" <small>(Votes: ". $rating->{"rating_count"} .")</small>") if $rating->{"rating_count"};
    $m->out("</span>");

</%perl>

%# vi: set ts=4 sw=4 ft=mason :

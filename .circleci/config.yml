version: 2.1

executors:
  musicbrainz-tests:
    docker:
      - image: metabrainz/musicbrainz-tests:v-2020-02
        user: root
    working_directory: /home/musicbrainz/musicbrainz-server

jobs:
  js:
    executor: musicbrainz-tests
    steps:
      - attach_workspace:
          at: &home /home/musicbrainz
      - run: |
          chown -R musicbrainz:musicbrainz .
          chown -R postgres:postgres /home/musicbrainz/pgdata
          rm /etc/service/chrome/down && sv start chrome
          export JUNIT_OUTPUT_FILE=junit_output/js.xml
          sudo -E -H -u musicbrainz carton exec -- prove \
              -I lib \
              t/js.t \
              t/web.js \
              --harness=TAP::Harness::JUnit \
              -v
      - store_test_results:
          path: ./junit_output

  perl-and-pgtap:
    executor: musicbrainz-tests
    steps:
      - attach_workspace:
          at: *home
      - run: |
          chown -R musicbrainz:musicbrainz .
          chown -R postgres:postgres /home/musicbrainz/pgdata
          ./docker/musicbrainz-tests/add_mbtest_alias.sh
          rm /etc/service/postgresql/down && sv start postgresql
          sudo -u postgres createdb -O musicbrainz -T musicbrainz_test -U postgres musicbrainz_test_json_dump
          sudo -u postgres createdb -O musicbrainz -T musicbrainz_test -U postgres musicbrainz_test_full_export
          sudo -u postgres createdb -O musicbrainz -T musicbrainz_test -U postgres musicbrainz_test_sitemaps
          rm /etc/service/{redis,template-renderer,vnu,website}/down && sv start redis template-renderer vnu website
          export MMD_SCHEMA_ROOT=/home/musicbrainz/mb-solr/mmd-schema
          export JUNIT_OUTPUT_FILE=junit_output/perl_and_pgtap.xml
          sudo -E -H -u musicbrainz carton exec -- prove \
              --pgtap-option dbname=musicbrainz_test \
              --pgtap-option host=localhost \
              --pgtap-option port=5432 \
              --pgtap-option username=musicbrainz \
              --source pgTAP \
              --source Perl \
              -I lib \
              -j 9 \
              t/pgtap/* \
              t/pgtap/unused-tags/* \
              t/script/BuildSitemaps.t \
              t/script/DumpJSON.t \
              t/script/ExportAllTables.t \
              t/tests.t \
              --harness=TAP::Harness::JUnit \
              -v
      - store_test_results:
          path: ./junit_output

  build:
    executor: musicbrainz-tests
    steps:
      - restore_cache:
          keys:
            - v1-source-{{ .Branch }}-{{ .Revision }}
            - v1-source-{{ .Branch }}-
            - v1-source-
      - checkout
      - run: |
          chown -R musicbrainz:musicbrainz .
          # The checkout step configures git to skip gc, so we run it
          # here to reduce .git's size before saving it to cache.
          sudo -E -H -u musicbrainz git gc
      - save_cache:
          key: v1-source-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"

      - restore_cache:
          keys:
            - v2-node-{{ checksum "yarn.lock" }}
            - v2-node-
      - run: |
          chown -R musicbrainz:musicbrainz .
          sudo -E -H -u musicbrainz yarn
      - save_cache:
          key: v2-node-{{ checksum "yarn.lock" }}
          paths:
            - "node_modules"

      - run: |
          sudo -E -H -u musicbrainz mkdir -p junit_output
          sudo -E -H -u musicbrainz cp docker/musicbrainz-tests/DBDefs.pm lib/
          rm /etc/service/{postgresql,redis}/down && sv start postgresql redis
          sudo -E -H -u musicbrainz carton exec -- ./script/create_test_db.sh
          sudo -E -H -u musicbrainz make -C po all_quiet deploy
          NODE_ENV=test WEBPACK_MODE=development sudo -E -H -u musicbrainz carton exec -- ./script/compile_resources.sh server web-tests
          sudo -E -H -u musicbrainz ./node_modules/.bin/flow --quiet
          # Prevent postgres from writing to pgdata while
          # persist_to_workspace runs below.
          sv stop postgresql

      - persist_to_workspace:
          root: *home
          paths:
            - "musicbrainz-server"
            - "pgdata"

workflows:
  version: 2.1
  build-and-test:
    jobs:
      - js:
          requires:
            - build
      - perl-and-pgtap:
          requires:
            - build
      - build

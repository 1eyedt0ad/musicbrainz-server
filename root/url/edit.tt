[% WRAPPER 'url/layout.tt' title=l('Edit URL') page='edit' full_width=1 -%]
    [% script_manifest('edit.js.manifest') %]

    <h2>[% l('Edit URL') %]</h2>
    <form action="[% c.req.uri %]" method="post">
        [% USE r = FormRenderer(form) %]
        [% form_row_url_long(r, 'url', l('URL:')) %]

        [% PROCESS 'forms/relationship-editor.tt' %]

        [% INCLUDE 'forms/edit-note.tt' %]
        [% enter_edit() %]
    </form>

    <script type="text/javascript">//<![CDATA[
    $(function () {
        var $urlControl = $("#id-edit-url\\.url");

        MB.editURLCleanup = MB.Control.URLCleanup({
            urlControl: $urlControl,
            typeInfoByID: MB.typeInfoByID
        });

        var vm = MB.sourceRelationshipEditor;
        var source = vm.source;
        source.name = ko.observable(source.name);

        $urlControl.on("change", function () { source.name(this.value) });

        [%- IF !c.user.is_location_editor %]
        vm.around("typesAreAccepted", function (supr, sourceType, targetType) {
            return targetType !== "area" && supr(sourceType, targetType);
        });
        [% END -%]

        [%- IF !c.user.is_relationship_editor %]
        vm.around("typesAreAccepted", function (supr, sourceType, targetType) {
            return targetType !== "instrument" && supr(sourceType, targetType);
        });
        [% END -%]

        source.relationships.notifySubscribers(source.relationships());

        // Update allowedRelationships, in case typesAreAccepted changed above.
        vm.allowedRelations = vm.getAllowedRelations();
    });
    //]]></script>
[% END %]

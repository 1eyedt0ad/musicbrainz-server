<div id="largemap"></div>
<script type="text/javascript">//<![CDATA[

(function () {
    [%~ DEFAULT places=entities ~%]
    var map,
        coordinates = [],
        places = [];

    [%~ FOR place IN places ~%]
        [%~ IF place.coordinates.defined ~%]
            places.push({
                uri: '[% link_entity(place) | js %]',
                title: '[% place.name | js %]',
                type: '[% place.l_type_name | js %]',
                typeID: [% place.type_id || 'null' %],
                coordinates: [[% place.coordinates.latitude %],
                              [% place.coordinates.longitude %]]
            });
        [%~ END ~%]
    [%~ END ~%]

    if (places.length) {
        var zoom = 12;

        map = L.map('largemap').setView(places[0].coordinates, zoom);

        L.tileLayer('https://{s}.tiles.mapbox.com/v4/[%~ mapbox_map_id ~%]/{z}/{x}/{y}.png?access_token=[%~ mapbox_access_token ~%]', {
            attribution: "<a href='https://www.mapbox.com/about/maps/' target='_blank'>&copy; Mapbox &copy; OpenStreetMap</a> <a class='mapbox-improve-map' href='https://www.mapbox.com/map-feedback/' target='_blank'>Improve this map</a>",
            maxZoom: 18
        }).addTo(map);

        L.Icon.Default.imagePath = '/static/images/leaflet/';
        var LeafIcon = L.Icon.extend({
            options: {
                iconSize: [25, 41],
                iconAnchor: [12, 41],
                popupAnchor: [1, -34]
            }
        });

        var iconNames = {
            '1': 'studio-marker',
            '2': 'venue-marker',
            '3': 'marker',
            '4': 'stadium-marker',
            '5': 'arena-marker',
            '6': 'religious-marker',
        };
        var icons = _.mapValues(iconNames, function (name) {
            return new LeafIcon(
                { iconUrl: '/static/images/leaflet/' + name + '-icon.png' }
            );
        });

        var markers = L.markerClusterGroup({
            maxClusterRadius: 50,
            spiderfyOnMaxZoom: true,
            showCoverageOnHover: false,
            zoomToBoundsOnClick: false,
            iconCreateFunction: function (cluster) {
                return L.divIcon({
                    html: '<img src="/static/images/leaflet/cluster-marker-icon.png" />'
                        + '<div class="cluster-div-text">'
                        + '<b>' + cluster.getChildCount() + '</b></div>',
                    className: 'cluster-div-icon',
                    iconSize: L.point(25, 41)
                });
            }
        });

        markers.on('clustermouseover', function (evt) {
            var markers = evt.layer.getAllChildMarkers(),
                popupText = markers.slice(0, 10).map(function (marker) {
                    return marker._popup._content;
                }).join('<br />');
            if (markers.length > 10) {
                popupText += '<br /> and ' + (markers.length - 10) + ' others';
            }
            evt.layer.bindPopup(popupText).openPopup();
        });

        markers.on('clustermouseout', function (evt) {
            map.closePopup();
        });

        places.forEach(function (place) {
            var placeType = place.type || '[% l('No type') | js %]';
            var marker = L.marker(
                place.coordinates,
                {
                    clickable: true,
                    draggable: false,
                    icon: _.get(icons, place.typeID, icons['3']),
                    title: place.title,
                }
            ).bindPopup(placeType + ': ' + place.uri);
            coordinates.push(place.coordinates);
            markers.addLayer(marker);
        });
        map.addLayer(markers);
        map.fitBounds(coordinates);
    }

}());
//]]></script>
